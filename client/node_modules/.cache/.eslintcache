[{"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/index.js":"1","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/App.js":"2","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/state/index.js":"3","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/theme.js":"4","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/homePage/index.jsx":"5","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/profilePage/index.jsx":"6","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/loginPage/index.jsx":"7","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/loginPage/Form.jsx":"8","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/widgets/UserWidget.jsx":"9","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/navbar/index.jsx":"10","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/components/UserImage.jsx":"11","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/components/WidgetWrapper.jsx":"12","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/widgets/MyPostWidget.jsx":"13","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/widgets/PostsWidget.jsx":"14","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/widgets/PostWidget.jsx":"15","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/components/Friend.jsx":"16"},{"size":1140,"mtime":1692064156114,"results":"17","hashOfConfig":"18"},{"size":1213,"mtime":1692064221473,"results":"19","hashOfConfig":"18"},{"size":1190,"mtime":1692064478286,"results":"20","hashOfConfig":"18"},{"size":2863,"mtime":1691714674814,"results":"21","hashOfConfig":"18"},{"size":1439,"mtime":1691983681659,"results":"22","hashOfConfig":"18"},{"size":90,"mtime":1691544476439,"results":"23","hashOfConfig":"18"},{"size":1087,"mtime":1691976891432,"results":"24","hashOfConfig":"18"},{"size":8841,"mtime":1691978546449,"results":"25","hashOfConfig":"18"},{"size":4644,"mtime":1691983907313,"results":"26","hashOfConfig":"18"},{"size":5858,"mtime":1692065296580,"results":"27","hashOfConfig":"18"},{"size":410,"mtime":1691981836603,"results":"28","hashOfConfig":"18"},{"size":285,"mtime":1691981622332,"results":"29","hashOfConfig":"18"},{"size":5385,"mtime":1691986028315,"results":"30","hashOfConfig":"18"},{"size":1807,"mtime":1692063025208,"results":"31","hashOfConfig":"18"},{"size":3417,"mtime":1692063025231,"results":"32","hashOfConfig":"18"},{"size":2404,"mtime":1692063025231,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ictrgy",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/index.js",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/App.js",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/state/index.js",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/theme.js",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/homePage/index.jsx",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/profilePage/index.jsx",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/loginPage/index.jsx",["85","86","87","88"],[],"import {Box, Typography, useTheme, useMediaQuery} from \"@mui/material\";\nimport Form from \"./Form\"\nconst LoginPage =()=>{\n    const theme=useTheme();\n    const isNonMobileScreen= useMediaQuery(\"(min-width:1000px)\");\n    return(\n        <Box>\n            <Box\n            width= \"100%\"\n            backgroundColor={theme.palette.background.alt}\n            p=\"1rem 6%\"\n            textAllign=\"center\"\n            >\n                <Typography fontWeight=\"bold\" fontSize=\"32px\" color=\"primary\">\n                    Spciopedia\n                </Typography>\n            </Box>\n\n            <Box\n            width={isNonMobileScreens ? \"50%\": \"93%\"}\n            p=\"2rem\"\n            m=\"2rem auto\"\n            BorderRadius=\"1.5 rem\"\n            backgroundColor={theme.palette.background.alt}\n            >\n                <Typography fontWeight=\"500\" variant =\"h5\" sx={{mb:\"1.5rem\"}}>\n                    Welcome to Socipedia, the Social Media for Sociopaths!\n                </Typography>\n                <From/>\n                </Box>\n                </Box>\n    )\n}\n\nexport default LoginPage;","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/loginPage/Form.jsx",["89","90","91","92","93","94"],[],"import {useState} from \"react\"\nimport{\n    Box,\n    Button,\n    TextField,\n    UseMediaQuery,\n    Typography,\n    useTheme,\n}from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport{ Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport {useNavigate}from \"react-router-dom\";\nimport {useDispatch} from \"reat-redux\";\nimport {setLogin} from \"state\";\nimport Dropzone from \"react-dropzone\"\nimport FlexBetween from \"components/FlexBetween\";\nconst registerSchema=yup.object().shape({\n    firsName: yup.string().required(\"required\"),\n    lastName: yup.string().required(\"required\"),\n    email: yup.string().email(\"invalid email\").required(\"required\"),\n    password: yup.string().required(\"required\"),\n    location: yup.string().required(\"required\"),\n    occupation: yup.string().required(\"required\"),\n    picture: yup.string().required(\"required\"),\n  });\n  const loginSchema=yup.object().shape({\n    email: yup.string().email(\"invalid  email\").required(\"required\"),\n    password: yup.string().required(\"required\"),\n  });\n  const initialValuesRegister= {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    location: \"\",\n    occupation: \"\",\n    picture: \"\",\n  };\n  const initialValuesLogin={\n    email:\"\",\n    password: \"\",\n  };\n  const Form =()=>{\n    const [pageType, setPageType]=useState(\"login\");\n    const {palette}=useTheme();\n    const dispatch=useDispatch();\n    const navigate=useNavigate();\n    const isNonMobile=useMediaQuery(\"(min-width:60px)\");\n    const isLogin=pageType===\"login\";\n    const isRegister =pageType===\"register\";\n    \n    const register = async(values,onSubmitProps)=>{\n        const formData= new FormData();\n        for (let value in values){\n            formData.append(value, values[values]);\n        }\n        formData.append(\"picturePath\", values.picture.name);\n\n        const savedUserResponse=await fetch(\n            \"https://localhost:3001/auth/register\",\n        {\n            method:\"POST\",\n            body: formData,\n\n        }\n        );\n        const SavedUser= await savedUserResponse.json();\n        onSubmitProps.resetForm();\n        if (savedUser){\n            setPageType(\"login\");\n        }\n    };\n    const login=async(values,onSubmitProps)=>{\n        const loggedInResponse =await fetch(\"https://localhost:3001/auth/login\",{\n            method: \"Post\",\n            headers: {\"Content-Type\": \"application/json\" },\n            body:JSON.stringify(values)\n\n        });\n        const loggedIn=await loggenInResponse.json();\n        onSubmitProps.resetFrom();\n        if(loggedIn){\n            dispatch(\n                setLogin({\n                    user: loggedIn.user,\n                    token: loggedIn.token,\n\n\n                })\n            );\n            navigate(\"/home\");\n        }\n    };\n    const handleFormSubmit=async (values, onSubmitProps)=>{\n        if (isLogin)await login(values, onSubmitProps);\n        if (isRegister)await register(values,onSubmitProps);\n    };\n    return (\n        <Formik\n        onSubmit={handleFormSubmit}\n        initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\n      validationSchema={isLogin ? loginSchema : registerSchema}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box\n            display=\"grid\"\n            gap=\"30px\"\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n            sx={{\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n            }}\n          >\n            {isRegister && (\n              <>\n                <TextField\n                  label=\"First Name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  name=\"firstName\"\n                  error={\n                    Boolean(touched.firstName) && Boolean(errors.firstName)\n                  }\n                  helperText={touched.firstName && errors.firstName}\n                  sx={{ gridColumn: \"span 2\" }}\n                />\n                <TextField\n                  label=\"Last Name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  name=\"lastName\"\n                  error={Boolean(touched.lastName) && Boolean(errors.lastName)}\n                  helperText={touched.lastName && errors.lastName}\n                  sx={{ gridColumn: \"span 2\" }}\n                />\n                <TextField\n                  label=\"Location\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.location}\n                  name=\"location\"\n                  error={Boolean(touched.location) && Boolean(errors.location)}\n                  helperText={touched.location && errors.location}\n                  sx={{ gridColumn: \"span 4\" }}\n                />\n                <TextField\n                  label=\"Occupation\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.occupation}\n                  name=\"occupation\"\n                  error={\n                    Boolean(touched.occupation) && Boolean(errors.occupation)\n                  }\n                  helperText={touched.occupation && errors.occupation}\n                  sx={{ gridColumn: \"span 4\" }}\n                />\n                <Box\n                  gridColumn=\"span 4\"\n                  border={`1px solid ${palette.neutral.medium}`}\n                  borderRadius=\"5px\"\n                  p=\"1rem\"\n                >\n                  <Dropzone\n                    acceptedFiles=\".jpg,.jpeg,.png\"\n                    multiple={false}\n                    onDrop={(acceptedFiles) =>\n                      setFieldValue(\"picture\", acceptedFiles[0])\n                    }\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <Box\n                        {...getRootProps()}\n                        border={`2px dashed ${palette.primary.main}`}\n                        p=\"1rem\"\n                        sx={{ \"&:hover\": { cursor: \"pointer\" } }}\n                      >\n                        <input {...getInputProps()} />\n                        {!values.picture ? (\n                          <p>Add Picture Here</p>\n                        ) : (\n                          <FlexBetween>\n                            <Typography>{values.picture.name}</Typography>\n                            <EditOutlinedIcon />\n                          </FlexBetween>\n                        )}\n                      </Box>\n                    )}\n                  </Dropzone>\n                </Box>\n              </>\n            )}\n\n            <TextField\n              label=\"Email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.email}\n              name=\"email\"\n              error={Boolean(touched.email) && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              sx={{ gridColumn: \"span 4\" }}\n            />\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.password}\n              name=\"password\"\n              error={Boolean(touched.password) && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              sx={{ gridColumn: \"span 4\" }}\n            />\n          </Box>\n\n          {/* BUTTONS */}\n          <Box>\n            <Button\n              fullWidth\n              type=\"submit\"\n              sx={{\n                m: \"2rem 0\",\n                p: \"1rem\",\n                backgroundColor: palette.primary.main,\n                color: palette.background.alt,\n                \"&:hover\": { color: palette.primary.main },\n              }}\n            >\n              {isLogin ? \"LOGIN\" : \"REGISTER\"}\n            </Button>\n            <Typography\n              onClick={() => {\n                setPageType(isLogin ? \"register\" : \"login\");\n                resetForm();\n              }}\n              sx={{\n                textDecoration: \"underline\",\n                color: palette.primary.main,\n                \"&:hover\": {\n                  cursor: \"pointer\",\n                  color: palette.primary.light,\n                },\n              }}\n            >\n              {isLogin\n                ? \"Don't have an account? Sign Up here.\"\n                : \"Already have an account? Login here.\"}\n            </Typography>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Form;\n","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/widgets/UserWidget.jsx",[],["95"],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/navbar/index.jsx",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/components/UserImage.jsx",["96","97"],[],"import { Box } from \"@mui/material\";\nconst UserImage=({image, size = \"60px\"})=>{\n    return(\n        <Box width={size}height={size}>\n            <img \n            style={{objectFit:\"cover\",borderRadius: \"50%\"}}\n            width={size}\n            height={size}\n            alt=\"user\"\n            src={`https://localhost:3001/assets/${image}`}\n            />\n        </Box>\n    );\n};\nexport default UserImager;","/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/components/WidgetWrapper.jsx",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/widgets/MyPostWidget.jsx",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/widgets/PostsWidget.jsx",[],["98"],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/scenes/widgets/PostWidget.jsx",[],[],"/Users/afzalkhan/Desktop/SocialMediaApp-/client/src/components/Friend.jsx",[],[],{"ruleId":"99","severity":1,"message":"100","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":5,"column":11,"nodeType":"101","messageId":"102","endLine":5,"endColumn":28},{"ruleId":"104","severity":2,"message":"105","line":20,"column":20,"nodeType":"101","messageId":"106","endLine":20,"endColumn":38},{"ruleId":"107","severity":2,"message":"108","line":29,"column":18,"nodeType":"109","messageId":"110","endLine":29,"endColumn":22},{"ruleId":"99","severity":1,"message":"111","line":6,"column":5,"nodeType":"101","messageId":"102","endLine":6,"endColumn":18},{"ruleId":"104","severity":2,"message":"112","line":49,"column":23,"nodeType":"101","messageId":"106","endLine":49,"endColumn":36},{"ruleId":"99","severity":1,"message":"113","line":68,"column":15,"nodeType":"101","messageId":"102","endLine":68,"endColumn":24},{"ruleId":"104","severity":2,"message":"114","line":70,"column":13,"nodeType":"101","messageId":"106","endLine":70,"endColumn":22},{"ruleId":"99","severity":1,"message":"115","line":75,"column":15,"nodeType":"101","messageId":"102","endLine":75,"endColumn":31},{"ruleId":"104","severity":2,"message":"116","line":81,"column":30,"nodeType":"101","messageId":"106","endLine":81,"endColumn":46},{"ruleId":"117","severity":1,"message":"118","line":35,"column":8,"nodeType":"119","endLine":35,"endColumn":10,"suggestions":"120","suppressions":"121"},{"ruleId":"99","severity":1,"message":"122","line":2,"column":7,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"104","severity":2,"message":"123","line":15,"column":16,"nodeType":"101","messageId":"106","endLine":15,"endColumn":26},{"ruleId":"117","severity":1,"message":"124","line":38,"column":6,"nodeType":"119","endLine":38,"endColumn":8,"suggestions":"125","suppressions":"126"},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'isNonMobileScreen' is assigned a value but never used.","no-undef","'isNonMobileScreens' is not defined.","undef","react/jsx-no-undef","'From' is not defined.","JSXIdentifier","undefined","'UseMediaQuery' is defined but never used.","'useMediaQuery' is not defined.","'SavedUser' is assigned a value but never used.","'savedUser' is not defined.","'loggedInResponse' is assigned a value but never used.","'loggenInResponse' is not defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["127"],["128"],"'UserImage' is assigned a value but never used.","'UserImager' is not defined.","React Hook useEffect has missing dependencies: 'getPosts', 'getUserPosts', and 'isProfile'. Either include them or remove the dependency array.",["129"],["130"],{"desc":"131","fix":"132"},{"kind":"133","justification":"134"},{"desc":"135","fix":"136"},{"kind":"133","justification":"134"},"Update the dependencies array to be: [getUser]",{"range":"137","text":"138"},"directive","","Update the dependencies array to be: [getPosts, getUserPosts, isProfile]",{"range":"139","text":"140"},[1173,1175],"[getUser]",[1048,1050],"[getPosts, getUserPosts, isProfile]"]